name: Build and Sign NuGet Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    # Decode base64 certificate from GitHub secrets
    - name: Setup certificate
      shell: pwsh
      env:
        CERTIFICATE_BASE64: ${{ secrets.SIGNING_CERTIFICATE_BASE64 }}
      run: |
        $bytes = [Convert]::FromBase64String($env:CERTIFICATE_BASE64)
        [IO.File]::WriteAllBytes("signing/XmlFix.pfx", $bytes)

    - name: Build and sign package
      shell: pwsh
      env:
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      run: |
        .\build-and-sign.ps1 -Configuration Release

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: signed-nuget-package
        path: artifacts/*.nupkg

    - name: Publish to NuGet (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        $package = Get-ChildItem -Path "artifacts" -Filter "*.nupkg" | Select-Object -First 1
        dotnet nuget push $package.FullName --api-key $env:NUGET_API_KEY --source https://api.nuget.org/v3/index.json

    - name: Clean up certificate
      if: always()
      shell: pwsh
      run: |
        if (Test-Path "signing/XmlFix.pfx") {
          Remove-Item "signing/XmlFix.pfx" -Force
        }