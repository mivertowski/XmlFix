name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      with:
        directory: ./coverage
        fail_ci_if_error: false
        verbose: true

  package:
    runs-on: ubuntu-latest
    name: Create NuGet Package
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Pack
      run: dotnet pack XmlFix.Analyzers/XmlFix.Analyzers.csproj --configuration Release --output ./artifacts

    - name: Upload NuGet package
      uses: actions/upload-artifact@v3
      with:
        name: nuget-package
        path: ./artifacts/*.nupkg
        retention-days: 7

  analyze:
    runs-on: ubuntu-latest
    name: Code Analysis
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run .NET Code Analysis
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release